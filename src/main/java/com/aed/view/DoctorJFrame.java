/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.aed.view;

import com.aed.aedlab2.AedLab2;
import com.aed.view.LoginJFrame;
import static com.aed.aedlab2.AedLab2.communityMap;
import static com.aed.aedlab2.AedLab2.docterMap;
import static com.aed.aedlab2.AedLab2.encounterMap;
import static com.aed.aedlab2.AedLab2.hospitalMap;
import static com.aed.aedlab2.AedLab2.personMap;
import static com.aed.aedlab2.AedLab2.vitalSignsMap;
import com.aed.model.Community;
import com.aed.model.Docter;
import com.aed.model.Encounter;
import com.aed.model.Hospital;
import com.aed.model.Person;
import com.aed.model.VitalSigns;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author mg
 */
public class DoctorJFrame extends javax.swing.JFrame {
    
    int personId = 0;
    DefaultTableModel model;
    String loginUserName="";
    int loginUserId = 0;
    
    /**
     * Creates new form DoctorJFrame
     */
    public DoctorJFrame() {
        initComponents();
        setTable();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pNameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        remarksLabel = new javax.swing.JLabel();
        pNameField = new javax.swing.JTextField();
        genderField = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalsText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        remarksText = new javax.swing.JTextArea();
        submitButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        docTable = new javax.swing.JTable();
        searchText = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(194, 223, 251));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        pNameLabel.setText("Patient Name");
        jPanel1.add(pNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 180, 50));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Patient Gender");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 170, 50));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Patient Age");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 170, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Patient Vitals");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 200, 50));

        remarksLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        remarksLabel.setText("Remarks for Patient");
        jPanel1.add(remarksLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 170, 50));
        jPanel1.add(pNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 270, 50));
        jPanel1.add(genderField, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 270, 50));
        jPanel1.add(ageField, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 270, 50));

        vitalsText.setColumns(20);
        vitalsText.setRows(5);
        jScrollPane1.setViewportView(vitalsText);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 270, 60));

        remarksText.setColumns(20);
        remarksText.setRows(5);
        jScrollPane2.setViewportView(remarksText);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 270, 60));

        submitButton.setText("Submit Remarks");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 230, 50));

        jPanel2.setBackground(new java.awt.Color(194, 223, 251));

        docTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        docTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(docTable);

        searchButton.setText("Search Patients");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 452, 710, 350));

        jPanel3.setBackground(new java.awt.Color(194, 223, 251));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        jPanel3.add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 160, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void docTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docTableMouseClicked
        // TODO add your handling code here:
        
        personId = Integer.parseInt(docTable.getValueAt
            (docTable.getSelectedRow(), NORMAL).toString());
        Person p = AedLab2.personMap.get(personId);

        
        String pVital = docTable.getValueAt(docTable.getSelectedRow(), 6).toString();
        String dRemarks = docTable.getValueAt(docTable.getSelectedRow(), 7).toString();
        
        pNameField.setText(p.getName());
        genderField.setText(p.getGender());
        ageField.setText(String.valueOf(p.getAge()));
        vitalsText.setText(pVital);
        remarksText.setText(dRemarks);
           
    }//GEN-LAST:event_docTableMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String searchStringKey = searchText.getText();
        searchString(searchStringKey);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        int docID = 0;
        if (personId != 0) {
        // add validation, one of the field must be changed, only then update
        
        personId = Integer.parseInt(docTable.getValueAt
            (docTable.getSelectedRow(), NORMAL).toString());
        Person p = AedLab2.personMap.get(personId);
        for(Integer id: docterMap.keySet()){
            Docter d = AedLab2.docterMap.get(id);
            if(d.getPersonId() == personId){
                docID = d.getDocterId();
            }
        }
        Encounter e = encounterMap.get(docID);
        e.setRemarks(remarksText.getText());
        e.setStatus("accepted");
        
        e.setDateOfEncounter(new Date());
        
        }//if
        JOptionPane.showMessageDialog(this, "Remarks Updated");
        setTable();
        resetAction();
        personId = 0;
    }//GEN-LAST:event_submitButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        LoginJFrame loginJFrame= new LoginJFrame();
        loginJFrame.show();
        dispose();
    
    }//GEN-LAST:event_logoutButtonActionPerformed
                                        
    public void searchString(String str){
        model = (DefaultTableModel) docTable.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        docTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    
    private void resetAction(){
        pNameField.setText("");
        genderField.setText("");
        ageField.setText("");
        vitalsText.setText("");
        remarksText.setText("");
    }
    public boolean validationAction(){
        
        
        Pattern pName = Pattern.compile("^[a-zA-Z][a-zA-Z ]+[a-zA-Z ]$");
        Matcher mName = pName.matcher(pNameField.getText());
        boolean isNameValid = mName.matches();
        
        Pattern pAge = Pattern.compile("^[0-9]*$");
        Matcher mAge = pAge.matcher((ageField.getText()));
        boolean isAgeValid = mAge.matches();
        
        
        if(pNameField.getText().equals("") || isNameValid == false){
            JOptionPane.showMessageDialog(this,"Name should be present and "
                    + "contain alphabets only");
            return false;
        }
        if((ageField.getText().equals("")) || isAgeValid == false){
            JOptionPane.showMessageDialog(this,"Age should be present and "
                    + "contain digits only");
            return false;
        }    
//        String strDate = dateField.getText();
//        if(strDate.equals("")){
//            JOptionPane.showMessageDialog(this,"Please enter date in "
//                    + "MM/DD/YYYY format");
//
//        }
//        SimpleDateFormat sdfrmt = new SimpleDateFormat("MM/dd/yyyy");
//        sdfrmt.setLenient(false);
//        if(true){
//        try
//	    {
//	        Date javaDate = sdfrmt.parse(strDate);
//            }
//	    catch (ParseException e)
//	    {
//	        JOptionPane.showMessageDialog(this,"Please enter date in "
//                    + "MM/DD/YYYY format");
//	        return false;
//	    }
//        }
        
        return true;
    }
    
    private void setTable(){
    int rIndex = 0;
        //DateTimeFormatter dateFormatter3 = DateTimeFormatter.ofPattern("dd-MMM-yyyy");
        String[][] data = new String[docterMap.size()][8];
        //Community.sort(communityMap, new SortById());
        
        for(Integer id: docterMap.keySet()){
            Docter d = AedLab2.docterMap.get(id);
            Person p = AedLab2.personMap.get(d.getPersonId()); 
            
            VitalSigns v = vitalSignsMap.get(d.getDocterId());
            Encounter e = encounterMap.get(d.getDocterId());
           
            //data[rIndex][0] = String.valueOf(id);
            data[rIndex][0] = String.valueOf(p.getPersonID());
            data[rIndex][1] = p.getName();
            data[rIndex][2] = p.getGender();
            data[rIndex][3] = String.valueOf(p.getAge()); //String.valueOf(e.getAge());
            data[rIndex][4] = e.getDateOfEncounter();
            data[rIndex][5] = e.getStatus();
            data[rIndex][6] = v.getSymptoms();
            data[rIndex][7] = e.getRemarks();
            rIndex++;
        }

        String[] col = {"ID","Patient name", "Gender", "Age", "Date", "Status", "Symptoms","Remarks"};

        DefaultTableModel model = new DefaultTableModel(data, col);
        docTable.setModel(model);
    }
//    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try{
                new DoctorJFrame().setVisible(true);
                }
                catch(Exception e){
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageField;
    private javax.swing.JTable docTable;
    private javax.swing.JTextField genderField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTextField pNameField;
    private javax.swing.JLabel pNameLabel;
    private javax.swing.JLabel remarksLabel;
    private javax.swing.JTextArea remarksText;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchText;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextArea vitalsText;
    // End of variables declaration//GEN-END:variables
}
